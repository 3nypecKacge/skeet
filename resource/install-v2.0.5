#!/bin/bash

# Constants and configurable variables
NODE_VERSION="20.15.1"

# Set current user and home directory
CURRENT_USER=$(whoami)
USER_HOME=$(eval echo ~"$CURRENT_USER")

# Determine if the user is using bash or zsh
SHELL_TYPE=$(echo $SHELL | awk -F/ '{print $NF}')
if [ "$SHELL_TYPE" == "bash" ]; then
    if [[ "$OSTYPE" == "darwin"* ]]; then
        PROFILE_PATH="$USER_HOME/.bash_profile"
    else
        PROFILE_PATH="$USER_HOME/.bashrc"
    fi
elif [ "$SHELL_TYPE" == "zsh" ]; then
    PROFILE_PATH="$USER_HOME/.zshrc"
else
    echo "Unsupported shell: $SHELL. Defaulting to .bash_profile"
    PROFILE_PATH="$USER_HOME/.bash_profile"
fi

echo "Detected OS: $OSTYPE"
echo "Using $SHELL_TYPE, setting up in $PROFILE_PATH"



# Function to install Homebrew if not already installed (macOS only)
install_homebrew() {
    if type brew > /dev/null; then
        echo "Homebrew is already installed."
    else
        echo "Installing Homebrew..."
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
}

# Function to install zip and unzip
install_zip_unzip() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        sudo apt-get install zip unzip -y
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        install_homebrew
        brew install zip unzip
    else
        echo "Unsupported operating system."
        exit 1
    fi
}

# Function to install GitHub CLI
install_github_cli() {
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        sudo apt-get install gh -y
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        if type brew > /dev/null; then
            brew install gh
        else
            echo "Homebrew is not installed. Please install Homebrew first."
            exit 1
        fi
    else
        echo "Unsupported operating system."
        exit 1
    fi
}


install_pnpm_and_packages() {

    curl -fsSL https://get.pnpm.io/install.sh | sh -
    source "$PROFILE_PATH"
    pnpm env use $NODE_VERSION --global

    echo "Installing @skeet-framework/cli..."
    pnpm add -g @skeet-framework/cli

    echo "Installing firebase-tools..."
    pnpm add -g firebase-tools
}

install_java_with_sdkman() {
    if [ -d "$USER_HOME/.sdkman" ]; then
        echo "SDKMAN already installed."
    else
        echo "Installing SDKMAN..."
        curl -s "https://get.sdkman.io" | $SHELL

        SDKMAN_INIT_SCRIPT="$USER_HOME/.sdkman/bin/sdkman-init.sh"
        if [ -f "$SDKMAN_INIT_SCRIPT" ]; then
            source "$SDKMAN_INIT_SCRIPT"
        fi

        if type sdk > /dev/null; then
            echo "Installing Java using SDKMAN..."
            sdk install java 11.0.20-zulu
            sdk use java 11.0.20-zulu
            echo "Java installation completed!"
            java --version
        else
            echo "Error initializing SDKMAN."
        fi

        add_sdkman_to_profile
    fi
}


# Add SDKMAN initialization to profile if not already present
add_sdkman_to_profile() {
    SDKMAN_INIT_SCRIPT="$USER_HOME/.sdkman/bin/sdkman-init.sh"
    if grep -q "source \"$SDKMAN_INIT_SCRIPT\"" "$PROFILE_PATH"; then
        echo "SDKMAN initialization already added to $PROFILE_PATH."
    else
        echo "Adding SDKMAN initialization to $PROFILE_PATH."
        echo "source \"$SDKMAN_INIT_SCRIPT\"" >> "$PROFILE_PATH"
    fi
}

main() {
    for arg in "$@"; do
      case "$arg" in
        -h|--help)
          cat <<EOF
Custom Install Script
Installs pnpm, node $NODE_VERSION, and sets it as the global version.
Additionally, installs the @skeet-framework/cli package globally.

USAGE:
    ${0##*/} [FLAGS]

FLAGS:
    -h, --help              Prints help information
EOF
          exit 0
          ;;
        *)
          ;;
      esac
    done
    install_zip_unzip
    install_github_cli
    install_java_with_sdkman
    install_pnpm_and_packages
    skeet log -aa
}

main "$@"
