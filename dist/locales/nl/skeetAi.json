{
  "common": {
    "you": "Jij",
    "start": "Wat kan ik voor je doen?",
    "aiType": "AI Type",
    "model": "Model",
    "maxToken": "Max Token",
    "temperature": "Temperatuur",
    "skeetAiModeText": "Skeet AI Modus\n `$ <modus>` om AI modus te veranderen",
    "isSelected": "is geselecteerd 🤖 (type 'q' om te stoppen)",
    "shutdown": "wordt afgesloten",
    "howAboutThis": "Wat vind je hiervan?\n\n",
    "updateFile": "Update alstublieft uw bestand",
    "getFileDesc": "Dit commando toont de meest recent bijgewerkte bestanden",
    "currentSet": "Huidige set",
    "areYouReady": "Ben je klaar om te starten?",
    "firestoreMode": "🔥 Firestore Model Generatie Modus 🔥",
    "firestoreModeDesc": "Beschrijf alstublieft uw Firestore gebruiksscenario.",
    "MayICreateFile": "Mag ik dit bestand voor u aanmaken?",
    "MayIUpdateFile": "Mag ik dit bestand voor u bijwerken?",
    "MayIAddDoc": "Mag ik Typedoc toevoegen voor deze methode?",
    "created": "✔️ Gemaakt",
    "thenRun": "\nVoer dan uit:",
    "mayISyncModel": "Mag ik nu modellen synchroniseren?",
    "confirmSyncModel": "❓ Mag ik nu modellen synchroniseren?",
    "example": "bijv. ",
    "addedDoc": "✔️ Typedoc toegevoegd"
  },
  "warning": {
    "temperature": "⚠️ Temperatuur moet tussen 0 en 1 zijn ⚠️",
    "gptKey": "⚠️ Stel CHAT_GPT_ORG en CHAT_GPT_KEY in ⚠️",
    "gcpKey": "⚠️ Stel GCLOUD_PROJECT en REGION in ⚠️"
  },
  "skeetMode": {},
  "typedocMode": {
    "init": "📚 Typedoc Modus 📚",
    "modeDesc": "Selecteer een bestandspad om typedoc te genereren.",
    "ExitingMode": "Typedoc Modus verlaten"
  },
  "translateMode": {
    "init": "🌐 Vertaalmodus 🌐",
    "modeDesc": "Lezen tmp/ai/translate.json ...",
    "currentSet": "Huidige set",
    "ExitingMode": "Vertaalmodus afsluiten"
  },
  "firestoreMode": {
    "init": "🔥 Firestore Model Genererende Modus 🔥",
    "modeDesc": "Beschrijf alstublieft uw Firestore-gebruiksscenario.",
    "example1": "Ik wil een blog-app maken.",
    "example2": "Ik wil een nieuw model genaamd Client maken met de volgende velden: id, naam, e-mail, wachtwoord, createdAt, updatedAt.",
    "ExitingMode": "Firestore-modus afsluiten"
  },
  "methodMode": {
    "init": "📝 Methode Modus 📝",
    "modeDesc": "Beschrijf alstublieft het gebruiksscenario voor uw methode",
    "list1": "Selecteer Firebase-functie om nieuwe methode toe te voegen",
    "example1": "Maak een functie die het grootste getal in een array vindt.",
    "ExitingMode": "Methode Modus afsluiten"
  },
  "functionMode": {
    "init": "🔥 Firebase Function Generatie Modus 🔥",
    "modeDesc": "Selecteer Firebase Functie Instantie Type",
    "modeDesc2": "Beschrijf uw Firebase Functie gebruikssituatie.",
    "list1": "Selecteer Firebase Functie om nieuwe methode toe te voegen",
    "http": "- Geactiveerd door http verzoek",
    "auth": "- Geactiveerd door Gebruikersauthenticatie evenement",
    "firestore": "- Geactiveerd door Firestore evenement",
    "pubsub": "- Geactiveerd door PubSub evenement",
    "schedule": "- Geactiveerd door Schema evenement",
    "example1": "Ik wil een blog app maken.",
    "example2": "Ik wil een nieuw model genaamd Client maken met de volgende velden: id, naam, email, wachtwoord, aangemaaktOp, bijgewerktOp.",
    "ExitingMode": "Functie Modus Verlaten"
  },
  "prismaMode": {
    "init": "🤖 Prisma Schema Generatie Modus 🤖",
    "mayISyncModel": "Mag ik nu modellen synchroniseren?",
    "modeDesc": "Beschrijf uw Prisma gebruikssituatie.",
    "example1": "Ik wil een blog app maken.",
    "example2": "Ik wil een nieuw model genaamd Client maken met de volgende velden: id, naam, email, wachtwoord, aangemaaktOp, bijgewerktOp.",
    "ExitingMode": "Prisma Modus Verlaten",
    "warning": "(Alleen de nieuwe delen van de modellen worden getoond. prisma-formaat (er is ook een vscode-plugin) zal de relaties automatisch aan de bestaande modellen toevoegen.)\n\n",
    "schemaConfirm": "\n❓ Is dit schema goed voor jou?",
    "migrationConfirm": "\n❓ Wil je dat ik de migratie nu uitvoer?",
    "scaffoldConfirm": "\n❓ Wil je dat ik de modellen nu genereer?"
  }
}